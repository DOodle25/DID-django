import { Card, CardBody } from "@nextui-org/card";
import axios from "axios";
import { useEffect, useState } from "react";
import { Spinner } from "@nextui-org/react";

const BechrajiMap = () => {
  const [bechrajiTotal, setBechrajiTotal] = useState(null);
  const [bechrajiData, setBechrajiData] = useState(null);

  useEffect(() => {
    const fetchPopsDataBechraji = async () => {
      try {
        const token = localStorage.getItem("token");
        const response = await axios.get(
          // "https://didbackend.onrender.com/agepops",
          // "http://localhost:5000/agepops/",
          `${import.meta.env.VITE_BACKEND_URL}/agepops`,
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
            withCredentials: true,
          }
        );
        console.log("okay");
        console.log(response.data);
        if (response.data) {
          const bechrajiData = response.data.find(
            (entry) => entry.taluka_name === "Bechraji"
          );
          if (bechrajiData) {
            const bechrajiTotal = bechrajiData.total_population;
            console.log("Total for Bechraji:", bechrajiTotal);
            setBechrajiTotal(bechrajiTotal);
          } else {
            console.log("Data for Bechraji not found");
          }
        } else {
          console.log("Invalid response format");
        }
      } catch (error) {
        console.error("Error fetching data:", error.message);
      }
    };

    const fetchBechrajiData = async () => {
      try {
        const token = localStorage.getItem("token");
        const response = await axios.get(
          // "https://didbackend.onrender.com/getcitiesdata",
          // "http://localhost:5000/getcitiesdata/",
          `${import.meta.env.VITE_BACKEND_URL}/getcitiesdata`,
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
            withCredentials: true,
          }
        );

        // Check if the response has data
        if (response.data && Array.isArray(response.data.data)) {
          // Find the data for Bechraji in the array
          const bechrajiData = response.data.data.find(
            (city) => city.taluka_name === "Becharaji"
          );

          if (bechrajiData) {
            console.log("Bechraji data:", bechrajiData);
            setBechrajiData(bechrajiData);
          } else {
            console.log("Bechraji data not found");
          }
        } else {
          console.log("Invalid response format");
        }
      } catch (error) {
        console.error("Error fetching data:", error.message);
      }
    };

    fetchBechrajiData();
    fetchPopsDataBechraji();
  }, []);

  return (
    <div className="flex flex-col justify-center items-center min-h-screen p-4 overflow-auto">
      <Card className="flex justify-center max-w-md w-full mb-2">
        <CardBody>
          <svg
            style={{ maxWidth: "400px" }}
            width=""
            height=""
            viewBox="0 0 304 194"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M175.517 183.736C177.5 184.5 180.727 184.068 183 183.5C185.162 182.96 187.5 183.688 189.304 182.285C190.999 180.967 192.654 179.626 194.257 178.184C195.612 176.964 195.991 174.345 196.97 172.631C198.387 170.151 200.945 170.512 200.945 167.268C200.945 164.842 201.156 162.346 202.365 160.17C203.636 157.881 206.348 159.298 208.328 158.308C210.587 157.179 212.625 155.731 214.858 154.491C215.976 153.87 216.265 152.579 217.161 151.683C218.29 150.554 219.285 152.113 220.253 152.377C220.975 152.574 224.099 152.891 224.67 152.377C225.403 151.717 224.591 150.016 223.976 149.664C222.618 148.888 220.253 147.347 220.253 145.689C220.253 142.309 221.141 143.137 223.376 141.398C225.617 139.656 228.029 138.056 226.626 134.899C225.774 132.982 226.752 130.559 228.487 129.788C231.183 128.59 230.615 128.192 230.475 125.813C230.318 123.152 227.067 123.051 227.067 120.418C227.067 117.474 231.679 119.758 230.191 115.592L230.165 115.519C229.036 112.358 228.576 111.071 225.238 109.787C221.847 108.483 217.534 99.3376 223.534 99.1233C226.442 99.0194 229.339 100.167 229.339 96.5678C229.339 94.1969 227.561 93.2853 226.058 91.6147C224.283 89.643 224.023 86.0622 227.383 86.0622C229.159 86.0622 231.07 85.1883 232.431 84.0747C234.078 82.7271 232.269 82.0746 231.042 81.3931C223.031 76.9421 241.543 67.2912 241.834 72.5213C241.96 74.794 247.804 74.7931 249.451 74.7928H249.5C251.487 74.7928 252.845 75.339 254.609 74.3893C255.305 74.0147 258.908 72.1572 257.606 70.8559C257.606 68.2058 255.662 70.2998 256.155 68.2058C256.548 66.5337 256.839 64.9987 256.313 63.3158C255.721 61.4221 252.926 55.6202 257.165 55.3971C260.992 55.1957 263.061 58.3204 266.534 59.6562C269.735 60.887 273.135 61.8429 276.378 63.0319C277.04 63.3158 277.197 63.4745 276.598 62.2116C275.985 60.9167 276.994 59.8824 277.04 58.6782C277.128 56.3899 278.312 56.5329 280.195 56.5329C285.536 56.5329 280.348 52.4795 281.047 50.0339C281.782 47.4596 287.709 47.9713 289.407 48.4565C292.934 49.4641 298.187 51.3484 301.143 48.9297C303.987 46.6027 300.054 40.786 299.313 38.0455C298.166 33.801 296.081 29.0958 293.761 25.2999C292.789 23.7099 291.776 21.3248 289.786 21.3248C288.958 21.3248 286.981 22.4222 286.252 21.7665C285.07 20.7021 285.039 18.6876 284.296 17.3497C283.595 16.088 281.919 14.9317 280.668 14.258C277.93 12.7836 272.257 13.9598 272.497 9.39951C272.603 7.39166 274.769 7.16744 274.769 4.98273C274.769 2.80357 273.319 1.75409 271.109 2.04872C266.329 2.68604 268.539 4.81768 267.26 7.69589C266.549 9.2962 265.049 11.4739 264.578 13.1222C263.69 16.2329 262.846 17.5023 261.266 20.1891C259.845 22.6047 255.013 20.4379 252.906 21.6088C249.795 23.337 250.216 26.8449 245.933 27.0035C243.844 27.0809 245.132 25.2595 244.419 23.9118C243.465 22.1104 241.794 21.5755 239.876 21.9242C237.305 22.3917 235.404 22.97 233.314 20.7569C232.043 19.4109 231.982 17.8331 231.042 16.3402C229.958 14.6174 228.353 14.704 227.099 13.6585C225.773 12.5535 221.329 12.8067 219.685 12.8067C215.769 12.8067 219.134 10.7351 218.518 8.57925C218.168 7.35398 211.7 7.41559 210.725 8.38996C208.478 10.6368 204.672 10.1622 203.501 13.9109C202.465 17.2257 205.124 18.1212 207.192 20.1891C209.3 22.2975 208.934 24.1334 208.359 26.7196C207.49 30.6311 203.215 35.008 199.778 36.9413C198.264 37.7927 196.689 38.7373 195.298 39.7807C194.072 40.7003 194.182 42.2689 192.301 42.3361C191.173 42.3764 185.802 42.9991 185.045 42.0521C183.59 40.2338 178.479 39.007 176.401 39.6229C173.997 40.3352 173.929 42.0347 172.552 43.7558C171.91 44.5576 170.281 43.6918 169.428 44.3552C168.57 45.0225 168.197 46.1233 167.441 46.8791C165.233 49.0867 162.353 47.3519 160.342 45.7433C158.036 43.898 158.724 39.284 159.775 36.9728C160.858 34.5891 160.204 30.1911 160.058 27.5714C159.99 26.3384 154.083 24.9602 152.96 25.5839C151.489 26.4011 149.121 26.0784 147.849 27.3506C146.872 28.3276 146.821 29.813 146.303 30.9786C144.491 35.0555 149.985 38.8197 148.985 42.62C148.542 44.3037 146.799 45.3922 145.041 45.7118C144.515 45.8074 143.744 45.8337 143.338 45.4278C143.06 45.15 143.3 44.0143 143.022 44.2921C140.682 46.6324 143.202 55.0866 143.59 57.3216C144.235 61.0297 145.185 64.4115 146.303 68.0165C147.172 70.8163 145.599 73.5795 142.707 74.1054C140.901 74.4337 139.784 73.8568 138.164 73.3167C136.281 72.6889 135.164 73.3696 133.368 73.569C130.258 73.9147 125.43 73.2817 122.327 74.1685C121.55 74.3903 120.611 76.6894 119.708 77.1971C118.444 77.9084 116.467 77.5137 115.638 76.4084C114.062 74.3071 108.422 77.8865 105.795 76.6923C104.865 76.2695 99.2782 74.4073 101.694 71.9916C102.773 70.9127 106.485 73.0784 107.12 71.1714C107.516 69.9848 105.765 69.1934 105.574 68.1427C104.881 64.3271 107.998 63.7317 110.086 61.6437C111.223 60.5065 113.321 58.7219 112.357 56.9746C111.315 55.0859 111.295 52.4096 109.265 51.422C108.28 50.9426 101.485 49.1946 102.262 47.4469C102.866 46.0868 105.207 45.694 105.511 44.3236C106.267 40.9226 100.179 42.2924 98.8545 39.4967C97.4636 36.5603 108.26 37.3947 106.079 31.5781C105.016 28.7425 94.5548 27.7007 91.9138 27.1297C88.3723 26.364 86.5145 30.5434 83.3642 29.559C81.8782 29.0946 80.5696 29.344 79.1367 28.7072C77.1974 27.8453 75.2654 26.766 73.3003 25.994C70.2587 24.7991 70.3941 20.36 67.2114 19.6528C65.5462 19.2827 61.7096 23.151 60.113 24.038C57.5892 25.4401 53.9005 26.8351 51.2479 27.8553C47.2826 29.3805 43.0399 27.9205 39.1018 28.1393C37.2952 28.2396 35.2551 34.4512 36.5779 35.774C38.1053 37.3014 38.6101 37.3251 39.3857 39.4967C39.8397 40.7679 38.8561 42.5323 37.966 43.4718C35.6059 45.9631 32.2688 44.988 29.3848 46.9106C26.0592 49.1277 22.6214 49.6828 19.9203 52.684C18.5224 54.2372 15.9187 56.0375 13.8315 56.5013C12.3515 56.8302 10.8318 57.6686 9.28849 57.6686C7.72106 57.6686 5.69598 57.2754 4.20919 57.7002C3.86901 57.7974 2.99393 59.7796 2.75796 60.1925C1.84755 61.7857 1.69938 60.9147 2.63177 62.7795C3.52535 64.5666 2.08116 64.4835 4.33538 65.1772C5.50696 65.5376 6.37098 65.6188 7.61642 65.6188C11.8664 65.6188 13.9858 67.8761 17.5226 69.5939C20.4212 71.0018 22.3343 73.352 18.059 74.4208C16.472 74.8176 14.3923 74.6593 14.7148 76.7554C14.9879 78.5304 15.7525 80.2457 16.2607 81.9609C16.604 83.1195 16.3167 84.0982 16.8286 85.1789C17.6988 87.0161 19.4592 89.4218 19.7626 91.3939C19.9756 92.7789 17.8171 92.6626 19.5417 93.76C21.1264 94.7684 21.4971 95.2888 22.1918 96.8518C22.9611 98.5826 26.4251 104.564 24.0216 105.938C21.5497 107.35 26.514 112.232 27.6181 113.446C29.5294 115.549 30.7796 120.135 34.2433 120.135C36.1197 120.135 35.7446 119.344 37.1142 121.018C37.8653 121.936 38.9659 123.455 39.1018 124.678C39.2695 126.187 39.9738 126.763 39.228 128.337C38.635 129.589 37.822 131.191 37.9976 132.596C38.1895 134.132 39.0348 137.356 40.1113 138.433C40.8839 139.205 42.362 138.492 40.8054 139.316C39.1361 140.2 41.9297 140.578 42.5405 140.578C45.1337 140.578 47.2085 139.439 49.6074 138.906C52.1206 138.347 54.6913 138.439 57.2737 137.739C60.4053 136.889 63.9993 135.756 66.9275 134.331C68.5412 133.546 70.1654 132.081 71.7859 131.492C74.8136 130.391 81.9772 128.228 84.5315 130.924C86.8721 133.395 85.0041 137.287 84.2476 140.01C82.7717 145.323 81.276 150.354 78.8528 155.343C78.0179 157.062 74.861 160.762 78.001 162.157C79.7778 162.947 81.3281 162.388 82.544 164.145C83.8719 166.063 83.3999 168.37 82.9618 170.512L82.9541 170.549C82.5473 172.538 81.4033 181.585 86.5506 178.31C91.4061 175.22 94.7532 177.07 94.7532 182.6C94.7532 185.408 94.8981 186.722 96.4568 188.973C96.7935 189.459 98.448 192.191 99.0438 192.191C101.446 192.191 104.555 189.776 106.679 188.847C110.356 187.238 112.622 185.137 115.638 182.6C117.09 181.379 118.642 178.082 120.56 177.616C123.422 176.92 127.417 176.921 130.464 176.922L130.782 176.922C132.751 176.922 137.043 176.02 138.732 176.985C139.317 177.319 139.785 179.427 140.215 180.045C140.886 181.01 141.776 181.777 142.454 182.727C145.795 187.404 150.66 182.121 155.232 183.137C157.368 183.611 159.84 184.436 162.046 184.273C165.145 184.043 166.653 181.895 169.839 182.474C171.661 182.806 173.899 182.717 175.517 183.736Z"
              stroke="black"
              strokeWidth="1"
              strokeLinecap="round"
            />
          </svg>

          <div className="text-center">Bechraji</div>
        </CardBody>
      </Card>
      <Card className="flex justify-center max-w-md w-full">
        <CardBody>
          <p>
            {bechrajiTotal ? `Total population: ${bechrajiTotal}` : <Spinner />}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Schools: ${bechrajiData.no_of_schools}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Colleges: ${bechrajiData.no_of_colleges}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Universities: ${bechrajiData.no_of_universities}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Bus Stations: ${bechrajiData.no_of_bus_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Railway Stations: ${bechrajiData.no_of_railway_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Post Offices: ${bechrajiData.no_of_post_offices}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Police Stations: ${bechrajiData.no_of_police_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Fire Stations: ${bechrajiData.no_of_fire_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {bechrajiData ? (
              ` No of Hospitals: ${bechrajiData.no_of_hospitals}`
            ) : (
              <Spinner />
            )}
          </p>
        </CardBody>
      </Card>
    </div>
  );
};

export default BechrajiMap;
