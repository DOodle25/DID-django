import { Card, CardBody } from "@nextui-org/card";
import axios from "axios";
import { useEffect, useState } from "react";
import { Spinner } from "@nextui-org/react";

const KadiMap = () => {
  const [kadiTotal, setKadiTotal] = useState(null);
  const [kadiData, setKadiData] = useState(null);

  useEffect(() => {
    const fetchPopsDataKadi = async () => {
      try {
        const token = localStorage.getItem("token");
        const response = await axios.get("http://localhost:5000/agepops/", {
          headers: {
            Authorization: `Bearer ${token}`,
          },
          withCredentials: true,
        });

        if (response.data) {
          const kadiData = response.data.find(
            (entry) => entry.taluka_name === "Kadi"
          );

          if (kadiData) {
            const kadiTotal = kadiData.total_population;
            console.log("Total for Kadi:", kadiTotal);
            setKadiTotal(kadiTotal);
          } else {
            console.log("Data for Kadi not found");
          }
        } else {
          console.log("Invalid response format");
        }
      } catch (error) {
        console.error("Error fetching data:", error.message);
      }
    };

    const fetchKadiData = async () => {
      try {
        const token = localStorage.getItem("token");
        const response = await axios.get(
          // "https://myapp.vercel.app/getcitiesdata",
          "http://localhost:5000/getcitiesdata/",
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
            withCredentials: true,
          }
        );

        if (response.data && Array.isArray(response.data.data)) {
          const kadiData = response.data.data.find(
            (city) => city.taluka_name === "Kadi"
          );

          if (kadiData) {
            console.log("Kadi data:", kadiData);
            setKadiData(kadiData);
          } else {
            console.log("Kadi data not found");
          }
        } else {
          console.log("Invalid response format");
        }
      } catch (error) {
        console.error("Error fetching data:", error.message);
      }
    };

    fetchKadiData();
    fetchPopsDataKadi();
  }, []);

  return (
    <div className="flex flex-col justify-center items-center min-h-screen p-4 overflow-auto">
      <Card className="flex justify-center max-w-md w-full mb-2">
        <CardBody>
          <svg
            style={{ maxWidth: "400px" }}
            width="400"
            height=""
            viewBox="0 0 326 358"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M94.8889 60.8007C96.0344 62.7224 97 64.6652 97 66.8943C97 69.3078 93.1029 74.9621 91.3 76.0086C89.138 77.2636 84.0195 80.6912 82.75 82.8834C80.9749 85.949 80.212 91.8252 76.575 92.6227C74.0423 93.1781 72.7805 92.5709 70.4 94.081C67.466 95.9423 66.7838 98.4811 63.75 95.4872C57.9083 89.7226 56.15 102.18 56.15 106.268C56.15 109.781 52.7533 105.799 49.5 105.799C44.0442 105.799 45.2446 111.427 44.0111 115.382C42.5807 119.97 40.9292 122.711 38.575 126.893C36.0847 131.316 37.0931 133.524 39.7889 136.944C39.9346 137.129 34.4503 139.137 33.7722 139.34C31.6697 139.969 31.1218 141.164 29.075 139.548C26.9558 137.875 28.0178 136.736 24.8 136.736C22.4153 136.736 22.2307 137.264 20.525 138.611C18.8505 139.933 16.25 146.735 16.25 148.923C16.25 154.242 17.2318 156.395 21.475 159.652C22.9732 160.802 28.3515 165.485 27.4389 167.673C26.3865 170.195 24.1611 172.558 22.425 174.652C20.1109 177.443 19.655 177.352 22.9 179.131C29.9968 183.021 23.857 203.942 18.15 207.255C15.2854 208.918 13.4 213.877 13.4 216.89C13.4 219.667 12.1334 220.704 13.1889 223.713C14.0653 226.211 15.6902 228.328 16.25 230.952C17.1991 235.401 18.8947 238.911 22.9 241.004C25.7157 242.475 28.6 245.588 28.6 248.764C28.6 257.687 26.5534 267.045 16.25 267.045C14.6985 267.045 5.90556 265.201 5.90556 267.618C5.90556 269.95 8.65 271.663 8.65 274.128C8.65 277.163 7.93846 279.436 6.53889 282.044C4.70408 285.464 2 290.528 2 294.231C2 297.491 6.28928 296.03 8.43889 295.377C11.0635 294.58 13.2252 298.334 14.2972 300.273C17.8251 306.655 26.7701 293.294 30.5 293.294C33.5224 293.294 39.7907 294.926 40.8972 290.013C42.4042 283.321 48.3073 285.708 53.5111 284.128C58.4707 282.622 61.3482 284.378 66.2294 284.378H67.1763C69.6324 284.378 70.2844 285.736 72.3838 286.198C77.2523 287.267 79.9963 288.402 84.2192 290.721C87.6516 292.606 93.1928 295.477 95.1077 298.885C96.8921 302.06 94.987 306.509 94.6343 309.648C94.4484 311.301 92.3877 313.256 95.2655 313.391C99.2103 313.577 103.771 314.508 107.364 316.199C110.692 317.766 116.502 317.233 118.095 321.607C118.894 323.801 116.976 323.952 115.465 324.83C113.705 325.854 113.571 328.555 113.571 330.29C113.571 335.224 115.473 338.676 117.832 342.873C119.962 346.665 121.325 361.051 128.299 354.156C130.96 351.526 134.558 350.315 138.188 349.893C141.107 349.553 141.805 346.149 145.763 346.149C146.961 346.149 154.126 345.019 152.812 344.277C149.306 342.297 147.247 338.454 145.553 334.918C142.954 329.496 140.774 321.988 135.821 318.071C127.604 311.572 136.127 303.693 142.449 298.833C145.336 296.613 149.234 293.879 153.127 293.737C156.611 293.609 162.784 293.723 164.7 290.409C167.34 285.842 164.7 285.708 164.7 281.57C164.7 278.639 169.709 277.512 171.748 277.878C178.613 279.112 181.685 282.669 186.897 286.457C191.475 289.784 193.341 293.211 191 298.417C189.947 300.759 188.382 309.44 191.684 303.564C193.408 300.497 193.378 295.874 196.892 293.945C200.432 292.001 204.466 290.199 204.466 285.782C204.466 280.377 206.325 280.683 211.515 279.75C215.476 279.038 215.607 276.872 215.828 273.147C216.074 269.012 222.681 270.847 224.771 271.223C235.687 273.185 234.464 264.861 239.289 258.9C240.789 257.046 239.828 250.684 237.132 250.684C233.616 250.684 230.869 252.028 228.137 254.428C223.023 258.921 206.962 257.438 202.573 252.556C195.162 244.315 200.326 236.63 205.413 229.366C208.842 224.47 211.946 222.205 217.249 219.383C219.065 218.416 222.117 218.783 224.139 218.863C224.724 218.886 227.148 220.189 227.138 220.163C224.846 214.498 221.35 200.144 231.451 200.144C236.757 200.144 236.933 203.098 240.235 206.488C242.485 208.797 245.523 211.006 248.494 212.311C250.236 213.077 252.083 212.744 253.701 213.455C259.106 215.83 254.576 210.044 253.701 208.1C252.029 204.38 248.672 201.849 246.863 198.272C245.511 195.599 244.947 192.321 244.286 189.381C243.372 185.315 240.273 181.976 238.552 178.15C237.697 176.248 235.712 174.708 235.712 172.534C235.712 170.837 235.249 168.931 234.555 167.387C232.726 163.321 240.997 165.515 243.812 165.515C252.402 165.515 255.277 160.595 251.808 152.88C250.138 149.165 243.515 150.665 240.235 150.54C236.68 150.405 233.089 146.584 229.557 145.808C220.905 143.908 224.667 129.16 226.98 124.334C229.873 118.297 235.624 104.68 243.286 104.68C248.235 104.68 251.461 106.989 252.807 111.647C253.786 115.032 261.145 117.035 264.169 117.783C270.648 119.384 272.3 117.196 277.372 114.247C280.71 112.306 278.495 109.352 275.952 107.955C273.692 106.714 270.953 106.552 268.43 106.552C264.843 106.552 269.726 103.784 270.955 103.536C274.241 102.871 282.199 103.561 284 100C287.387 98.319 288.661 91.7194 287.507 87.998C285.943 82.9524 278.805 79.5544 278.254 74.6393C277.975 72.1409 276.448 70.0139 280.62 70.9343C284.294 71.7447 282.828 73.35 285.089 75.3698C287.682 77.6863 296.35 72.9847 299.284 72.7607C304.274 72.3796 309.11 70.5658 313.268 68.273C314.597 67.5402 317.463 66.4061 317.947 64.7245C318.586 62.5061 318.469 60.7415 321.049 59.8194C327.664 57.4559 321.445 52.4224 318.946 50.2177C317.255 48.726 315.998 45.289 313.689 44.6342C311.292 43.9545 308.813 44.0249 307.59 41.2945C306.868 39.6823 301.822 36.5199 304.751 34.9804C306.661 33.9769 307.933 31.1936 305.277 30.4405C302.942 29.7781 301.955 28.4552 299.073 28.6141C296.739 28.7428 294.521 29.5534 291.976 29.5534C288.208 29.5534 281.078 28.205 277.781 30.023C276.086 30.9579 262.606 35.5535 262 30.4405C261.512 26.3198 263.94 24.5216 262 23C262 25.0216 262.957 18.3879 258 15C252.457 12.3879 255.065 14.5152 253 13.3767C250.162 11.8118 249.206 12.3556 246.08 10.9763C243.874 10.0033 241.563 12.6602 238.982 11.2372C236.795 10.0314 233.865 6.85067 232 5C228.599 1.62441 224.756 0.913994 220.003 2.26181C215.111 3.64911 211.39 5.89249 206.807 8.41937C204.2 9.85696 195.847 6.58628 194 8.41937C192.516 9.89237 196.285 14.0197 196.923 16.873C197.585 19.827 199.367 20.1831 197.607 22.9784C196.494 24.7455 192.597 25.4343 190.72 25.8484C188.099 26.4265 185.559 28.2961 182.676 28.6141C179.422 28.9729 179.528 31.331 178.838 33.728C178.245 35.7874 178.079 37.4789 177.944 39.8856C177.848 41.6147 176.027 42.2316 175.316 43.6427C174.956 44.3569 175.522 46.1411 174.58 46.4084C168.447 48.1476 163.888 47.7956 157.599 46.4084C156.132 46.0849 146.138 34.2357 145.77 40.8248C145.364 48.0728 140.907 42.7648 137.989 47.3999C136.359 49.9883 136.507 50.5874 137.726 53.9749C145.77 53.9749 139.083 60.3186 137.253 61.2805C135.101 62.4113 132.504 62.4285 130.103 62.4285C126.865 62.4285 125.14 64.4575 123.794 61.4892C122.573 58.7967 121.711 53.0356 117.853 53.0356C115.567 53.0356 117.946 56.3448 116.907 58.2017C115.343 60.9959 114.442 57.623 114.541 55.8535C114.721 52.6384 117.18 52.5445 115.908 48.7566C113.636 41.9911 110.156 41.8036 106.024 46.9302C102.596 51.184 111.595 54.8775 104.657 56.8449C101.852 57.6404 102.817 60.4575 99.3998 58.4626C98.2905 57.8149 98.2147 54.5 96.5386 54.2744C94.5 54 94.4116 60 94.8889 60.8007Z"
              stroke="black"
              strokeWidth="1"
              strokeLinecap="round"
            />
          </svg>

          <div className="text-center">Kadi</div>
        </CardBody>
      </Card>
      <Card className="flex justify-center max-w-md w-full mb-2">
        <CardBody>
          <p>{kadiTotal ? `Total population: ${kadiTotal}` : <Spinner />}</p>
          <p>
            {kadiData ? (
              ` No of Schools: ${kadiData.no_of_schools}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Colleges: ${kadiData.no_of_colleges}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Universities: ${kadiData.no_of_universities}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Bus Stations: ${kadiData.no_of_bus_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Railway Stations: ${kadiData.no_of_railway_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Post Offices: ${kadiData.no_of_post_offices}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Police Stations: ${kadiData.no_of_police_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Fire Stations: ${kadiData.no_of_fire_stations}`
            ) : (
              <Spinner />
            )}
          </p>
          <p>
            {kadiData ? (
              ` No of Hospitals: ${kadiData.no_of_hospitals}`
            ) : (
              <Spinner />
            )}
          </p>
        </CardBody>
      </Card>
    </div>
  );
};

export default KadiMap;
